/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: NT747 (https://sketchfab.com/ntdw)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/poe-dameron-x-wing-a7fd082a1ad54c32bacee493ddbc56df
title: Poe Dameron X wing
*/

import React, { useEffect, useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

type GLTFResult = {
	nodes: {
		Pyramid: THREE.Mesh;
	};
	materials: {
		['default']: THREE.MeshStandardMaterial;
	};
}

export default function Model({ ...props }) {
  const [prevPositions, setPrevPositions] = useState<{
    x: number
    y: number
  } | null>({ x: 0, y: 0 })
  const [positionX, setPositionX] = useState<number | null>(0)
  const [positionY, setPositionY] = useState<number | null>(0)
  useEffect(() => {
    setPrevPositions({
      x: positionX,
      y: positionY,
    })
    setPositionX(
      (2 * ((props.cursorPosition.x - props.width / 2) * props.vWidth)) /
        props.width
    )
    setPositionY(
      (-2 * ((props.cursorPosition.y - props.height / 2) * props.vHeight)) /
        props.height
    )
  }, [props.cursorPosition])
  useFrame((state, delta) => {
    let rotation = Math.atan2(
      positionY - group.current.position.y,
      positionX - group.current.position.x
    )
    group.current.rotation.y = rotation + Math.PI / 2
    // console.log("Y: " + positionY + " X: " + positionX)
    // console.log(rotation)
    // console.log((rotation + Math.PI/2) * 180/Math.PI)
    // group.current.position.set(positionX, positionY, 0)
  })
  const group = useRef(null)
  const { nodes, materials } = useGLTF('/xwing.gltf') as GLTFResult 
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh
              geometry={nodes.default_initialShadingGroup_0.geometry}
              material={materials.initialShadingGroup}
            />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/xwing.gltf')
